{"version":3,"sources":["components/Wrapper/Wrapper.styled.js","components/Statistics/Statistics.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Feedback/Feedback.jsx","components/Wrapper/Wrapper.jsx","components/App/App.js","index.js"],"names":["Container","styled","div","List","ul","Item","li","Title","h1","Section","title","children","prototype","PropTypes","string","isRequired","node","Statistics","props","good","neutral","bad","total","positivePercentage","Button","button","FeedbackOptions","onLeaveFeedback","name","onClick","h2","Notification","message","massage","Feedback","state","initialValue","visible","incrementStatistics","e","target","setState","prevState","changeVisible","countTotalFeedback","countPositiveFeedbackPercentage","totalSum","Math","round","this","positiveFeed","Component","defaultProps","Wrapper","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.078c5007.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nmargin-top: 20px;\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\nlist-style: none;\r\nmargin-top: 10px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\nfont-weight: 700;\r\ncolor: #fff;\r\n&:not(:last-child){\r\n    margin-bottom: 10px;\r\n}\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h1`\r\ncolor: #fff;\r\n`;\r\n\r\nexport const Container = styled.div`\r\ndisplay: inline;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Title, Container } from './Section.styled.js';\r\n\r\nfunction Section({title, children}) {\r\n    return <Container>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </Container>\r\n           \r\n    \r\n}\r\n\r\nexport default Section\r\n\r\nSection.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node,\r\n}","import React from 'react';\r\nimport { List,Item} from './Statistics.styled.js'\r\nimport Section from '../Section/Section.jsx';\r\n\r\n\r\nfunction Statistics(props) {\r\n    const { good, neutral, bad, total, positivePercentage } = props;\r\n    return <Section title=\"Statistics\">\r\n        <List>\r\n                    <Item>Good: {good}</Item>\r\n                    <Item>Neutral: {neutral}</Item>\r\n                    <Item>Bad: {bad}</Item>\r\n                    <Item >Total: {total}</Item>\r\n                    <Item >Positive feedback: {positivePercentage}%</Item>\r\n        </List>\r\n    </Section>\r\n}\r\n\r\nexport default Statistics\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\ncolor: #fff;\r\nbackground-color: transparent;\r\nborder: 2px solid;\r\nborder-radius: 30%;\r\noutline: none;\r\n&:not(:last-child){\r\n    margin-right: 10px;\r\n}\r\n&:hover{\r\n    background-color:#f2f2f2 ;\r\n}\r\n`;\r\n\r\nexport const Container = styled.div`\r\nmargin-top: 20px;\r\ndisplay: flex;\r\njustify-content: center;\r\n\r\npadding-bottom: 20px;\r\n`;","import React from 'react';\r\n\r\nimport { Button, Container } from './FeedbackOptions.styled.js';\r\nimport Section from '../Section/Section.jsx';\r\n\r\nfunction FeedbackOptions(props) {\r\n    const { onLeaveFeedback } = props;\r\n    return <Section title=\"Please leave feedback\">\r\n        <Container>\r\n             <Button name=\"good\" onClick={onLeaveFeedback}>Good</Button>\r\n                <Button name=\"neutral\" onClick={onLeaveFeedback}>Neutral</Button>\r\n                <Button name=\"bad\" onClick={onLeaveFeedback}>Bad</Button>\r\n        </Container>\r\n    </Section>\r\n}\r\n\r\nexport default FeedbackOptions\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n`;\r\nexport const Title = styled.h2`\r\ncolor: #fff;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Container, Title} from './Notification.styled.js'\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <Container>\r\n            <Title>{message}</Title>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n\r\nNotification.prototype = {\r\n    massage: PropTypes.string.isRequired,\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Notification from '../Notification/Notification';\r\n\r\nexport class Feedback extends Component {\r\n    static defaultProps = {\r\n        initialValue: 0,\r\n    }\r\n    static propTypes = {\r\n        good: PropTypes.number,\r\n        neutral: PropTypes.number,\r\n        bad: PropTypes.number,\r\n        visible:PropTypes.bool,\r\n    }\r\n    state = {\r\n        good: this.props.initialValue,\r\n        neutral: this.props.initialValue,\r\n        bad: this.props.initialValue,\r\n        visible: false,\r\n    }\r\n    \r\n    incrementStatistics = (e) => {\r\n        const { name } = e.target;\r\n        this.setState((prevState) => ({\r\n            [name]: prevState[name] + 1,\r\n        }));\r\n        this.changeVisible();\r\n    }\r\n\r\n    changeVisible = () => {\r\n        this.setState({visible: true})\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        const { good, neutral, bad} = this.state;\r\n        return good + bad + neutral;\r\n    }\r\n    countPositiveFeedbackPercentage = (totalSum) => {\r\n        const { good} = this.state;\r\n        return Math.round(good / totalSum * 100);\r\n    }\r\n  \r\n    render() {\r\n        const { good, neutral, bad, visible} = this.state;\r\n        const totalSum = this.countTotalFeedback();\r\n        const positiveFeed = this.countPositiveFeedbackPercentage(totalSum);\r\n    \r\n        return (\r\n            <div>\r\n                <FeedbackOptions onLeaveFeedback={this.incrementStatistics}></FeedbackOptions>\r\n                {!visible && <Notification message=\"No feedback given\"/> }\r\n                { visible && <Statistics good={good} neutral={neutral} bad={bad} total={totalSum} positivePercentage={positiveFeed}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feedback\r\n\r\n","import React from 'react'\r\nimport { Container } from './Wrapper.styled';\r\nimport Feedback from '../Feedback/Feedback';\r\n\r\n\r\nfunction Wrapper() {\r\n    return (\r\n        <Container>\r\n            <Feedback initialValue={0}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Wrapper\r\n","import Wrapper from '../Wrapper/Wrapper';\nimport './App.css';\n\n\n\nfunction App() {\n  return <Wrapper/>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}