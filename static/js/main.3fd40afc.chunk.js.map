{"version":3,"sources":["components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/FeedbackOptions/FeedbackOptions.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","components/App/App.styled.js","components/App/App.jsx","index.js"],"names":["Container","styled","div","Title","h2","Notification","message","prototype","massage","PropTypes","string","isRequired","Button","button","h1","Section","title","children","node","FeedbackOptions","options","onLeaveFeedback","map","nameBtn","index","name","type","onClick","List","ul","Item","li","Statistics","props","good","neutral","bad","total","positivePercentage","App","state","initialValue","visible","incrementStatistics","e","target","setState","prevState","changeVisible","countTotalFeedback","countPositiveFeedbackPercentage","totalSum","Math","round","this","positiveFeed","Object","keys","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fd40afc.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n`;\r\nexport const Title = styled.h2`\r\ncolor: #fff;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Container, Title} from './Notification.styled.js'\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <Container>\r\n            <Title>{message}</Title>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n\r\nNotification.prototype = {\r\n    massage: PropTypes.string.isRequired,\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\ncolor: #fff;\r\nbackground-color: transparent;\r\nborder: 2px solid;\r\nborder-radius: 30%;\r\noutline: none;\r\ntext-transform: capitalize ;\r\n&:not(:last-child){\r\n    margin-right: 10px;\r\n}\r\n&:hover{\r\n    background-color:#f2f2f2 ;\r\n}\r\n`;\r\n\r\nexport const Container = styled.div`\r\nmargin-top: 20px;\r\ndisplay: flex;\r\njustify-content: center;\r\n\r\npadding-bottom: 20px;\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h1`\r\ncolor: #fff;\r\n`;\r\n\r\nexport const Container = styled.div`\r\ndisplay: inline;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Title, Container } from './Section.styled.js';\r\n\r\nfunction Section({title, children}) {\r\n    return <Container>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </Container>\r\n           \r\n    \r\n}\r\n\r\nexport default Section\r\n\r\nSection.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node,\r\n}","import React from 'react';\r\n\r\nimport { Button, Container } from './FeedbackOptions.styled.js';\r\nimport Section from '../Section/Section.jsx';\r\n\r\nfunction FeedbackOptions({ options , onLeaveFeedback}) {\r\n    return <Section title=\"Please leave feedback\">\r\n        <Container>\r\n            {options.map((nameBtn, index) => (\r\n                <Button key={index} name={nameBtn} type='button' onClick={onLeaveFeedback}>{nameBtn}</Button>\r\n            ))}\r\n        </Container>\r\n    </Section>\r\n}\r\n\r\nexport default FeedbackOptions\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\nlist-style: none;\r\nmargin-top: 10px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\nfont-weight: 700;\r\ncolor: #fff;\r\n&:not(:last-child){\r\n    margin-bottom: 10px;\r\n}\r\n`;","import React from 'react';\r\nimport { List,Item} from './Statistics.styled.js'\r\nimport Section from '../Section/Section.jsx';\r\n\r\n\r\nfunction Statistics(props) {\r\n    const { good, neutral, bad, total, positivePercentage } = props;\r\n    return <Section title=\"Statistics\">\r\n        <List>\r\n                    <Item>Good: {good}</Item>\r\n                    <Item>Neutral: {neutral}</Item>\r\n                    <Item>Bad: {bad}</Item>\r\n                    <Item >Total: {total}</Item>\r\n                    <Item >Positive feedback: {positivePercentage}%</Item>\r\n        </List>\r\n    </Section>\r\n}\r\n\r\nexport default Statistics\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\nalign-items: center;\r\njustify-content:center;\r\n`;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport { Container } from './App.styled.js';\n\n\nexport default class App extends Component {\n      static defaultProps = {\n        initialValue: 0,\n    }\n    static propTypes = {\n        good: PropTypes.number,\n        neutral: PropTypes.number,\n        bad: PropTypes.number,\n        visible:PropTypes.bool,\n    }\n    state = {\n        good: this.props.initialValue,\n        neutral: this.props.initialValue,\n        bad: this.props.initialValue,\n        visible: false,\n    }\n      \n    incrementStatistics = (e) => {\n        const { name } = e.target;\n        this.setState((prevState) => ({\n            [name]: prevState[name] + 1,\n        }));\n        this.changeVisible();\n    }\n\n    changeVisible = () => {\n        this.setState({visible: true})\n    }\n\n    countTotalFeedback = () => {\n        const { good, neutral, bad} = this.state;\n        return good + bad + neutral;\n    }\n    countPositiveFeedbackPercentage = (totalSum) => {\n        const { good } = this.state;\n        return Math.round(good / totalSum * 100);\n    }\n  render() {\n        const { good, neutral, bad, visible} = this.state;\n        const totalSum = this.countTotalFeedback();\n        const positiveFeed = this.countPositiveFeedbackPercentage(totalSum);\n    \n        return (\n            <Container>\n                <FeedbackOptions onLeaveFeedback={this.incrementStatistics} options={Object.keys({good,neutral,bad})} />\n                {!visible && <Notification message=\"No feedback given\"/> }\n                { visible && <Statistics good={good} neutral={neutral} bad={bad} total={totalSum} positivePercentage={positiveFeed}/>}\n            </Container>\n        )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}